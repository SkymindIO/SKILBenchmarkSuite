{"paragraphs":[{"title":"Documentation and Samples","text":"%md\n<a target=\"_blank\" href=\"http://deeplearning4j.org/doc\">DL4J Documentation</a>\n<a target=\"_blank\" href=\"https://nd4j.org/doc/\">ND4J Documentation</a>\n<a target=\"_blank\" href=\"https://deeplearning4j.org/datavecdoc/\">DataVec (ETL) Documentation</a>\nSKIL also comes with support for <a target=\"_blank\" href=\"https://keras.io\">Keras</a> and <a target=\"_blank\" href=\"https://www.tensorflow.org/\">Tensorflow</a> with %pyspark\nFor examples please see <a target=\"_blank\" href=\"https://github.com/SkymindIO/SKIL_Examples\">SKIL_Examples</a>","user":"admin","dateUpdated":"2018-03-22T17:49:24+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521740279210_-505801266","id":"20180322-173759_1778013904","dateCreated":"2018-03-22T17:37:59+0000","dateStarted":"2018-03-22T17:49:24+0000","dateFinished":"2018-03-22T17:49:24+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:258"},{"title":"Imports","text":"import io.skymind.zeppelin.utils._\nimport io.skymind.modelproviders.history.client.ModelHistoryClient\nimport io.skymind.modelproviders.history.model._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.api.storage.impl.RemoteUIStatsStorageRouter\nimport org.deeplearning4j.ui.stats.StatsListener\nimport org.datavec.api.transform._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.lossfunctions.LossFunctions._\nimport org.nd4j.linalg.factory.Nd4j\n","user":"admin","dateUpdated":"2018-03-23T18:13:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import io.skymind.zeppelin.utils._\nimport io.skymind.modelproviders.history.client.ModelHistoryClient\nimport io.skymind.modelproviders.history.model._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.api.storage.impl.RemoteUIStatsStorageRouter\nimport org.deeplearning4j.ui.stats.StatsListener\nimport org.datavec.api.transform._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.lossfunctions.LossFunctions._\nimport org.nd4j.linalg.factory.Nd4j\n"}]},"apps":[],"jobName":"paragraph_1521740279210_-505801266","id":"20180322-173759_1692173313","dateCreated":"2018-03-22T17:37:59+0000","dateStarted":"2018-03-23T18:13:51+0000","dateFinished":"2018-03-23T18:14:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:259"},{"title":"Skil Context","text":"val skilContext = new SkilContext()\nval client = skilContext.client","user":"admin","dateUpdated":"2018-03-23T18:26:21+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"skilContext: io.skymind.zeppelin.utils.SkilContext = io.skymind.zeppelin.utils.SkilContext@3c9a7d33\nclient: io.skymind.modelproviders.history.client.ModelHistoryClient = io.skymind.modelproviders.history.client.ModelHistoryClient@9a70cea\n"}]},"apps":[],"jobName":"paragraph_1521740279210_-505801266","id":"20180322-173759_723689592","dateCreated":"2018-03-22T17:37:59+0000","dateStarted":"2018-03-23T18:26:22+0000","dateFinished":"2018-03-23T18:26:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:260"},{"title":"How to interact with SKIL","text":"//val numRows = 28\n//val numColumns = 28\n//val outputNum = 10 // number of output classes\nval batchSize = 32 // batch size for each epoch\nval rngSeed = 123 // random number seed for reproducibility\nval numEpochs = 15 // number of epochs to perform\n\n\n// total parameters: 100,000\nval input_layer_neurons = 100\nval hidden_layer_1_neurons = 490\nval hidden_layer_2_neurons = 102\nval output_layer_neurons = 10\n\n\n\n//val trainData = new MnistDataSetIterator(batchSize, true, 42)\n//val testData = new MnistDataSetIterator(batchSize, false, 42)\n\nval conf: MultiLayerConfiguration = new NeuralNetConfiguration.Builder()\n    .seed(rngSeed) //include a random seed for reproducibility\n    .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT) // use stochastic gradient descent as an optimization algorithm\n    .updater(new Nesterovs(0.006, 0.9)) //specify the rate of change of the learning rate.\n    .l2(1e-4)\n    .list()\n    .layer(0, new DenseLayer.Builder() //create the first, input layer with xavier initialization\n            .nIn( input_layer_neurons ) //numRows * numColumns)\n            .nOut( hidden_layer_1_neurons )\n            .activation(Activation.RELU)\n            .weightInit(WeightInit.XAVIER)\n            .build())\n    .layer(1, new DenseLayer.Builder() //create the first, input layer with xavier initialization\n            .nIn( hidden_layer_1_neurons )\n            .nOut( hidden_layer_2_neurons )\n            .activation(Activation.RELU)\n            .weightInit(WeightInit.XAVIER)\n            .build())\n    .layer(2, new OutputLayer.Builder(LossFunction.NEGATIVELOGLIKELIHOOD) //create hidden layer\n            .nIn( hidden_layer_2_neurons )\n            .nOut( output_layer_neurons )\n            .activation(Activation.SOFTMAX)\n            .weightInit(WeightInit.XAVIER)\n            .build())\n    .build()\n\nval model = new MultiLayerNetwork(conf)\nmodel.init()\n\n\n\n// System.out.println(\"Total number of parameters: \" + network.numParams());\nprintln( \"Total parameter count \" + model.numParams() )\n\n//for (i <- 1 to 2) {\n//  model.fit(trainData.next())\n//}\n\n//val evaluation = model.evaluate(testData)\n\nval modelId = skilContext.addModelToExperiment(z, model, \"SKILBenchmarks 100k Model\")\n//val evalId = skilContext.addEvaluationToModel(z, modelId, evaluation, \"simple 10 epochs\")\n// To use your trained model in your Spark cluster add a KeyedDataProvider to a plugin jar and run:\n// import io.skymind.skil.daemon.model.SparkArgs\n// val args = SparkArgs.builder().master(\"yarn\").build() // All spark-submit options available.\n// skilContext.batchInference(z, args, modelId, \"io.skymind.skil.train.spark.MnistKeyedProvider\", \"hdfs:/tmp/out1\")","user":"admin","dateUpdated":"2018-03-23T19:30:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"batchSize: Int = 32\nrngSeed: Int = 123\nnumEpochs: Int = 15\ninput_layer_neurons: Int = 100\nhidden_layer_1_neurons: Int = 490\nhidden_layer_2_neurons: Int = 102\noutput_layer_neurons: Int = 10\nconf: org.deeplearning4j.nn.conf.MultiLayerConfiguration = \n{\n  \"backprop\" : true,\n  \"backpropType\" : \"Standard\",\n  \"cacheMode\" : \"NONE\",\n  \"confs\" : [ {\n    \"cacheMode\" : \"NONE\",\n    \"epochCount\" : 0,\n    \"iterationCount\" : 0,\n    \"l1ByParam\" : { },\n    \"l2ByParam\" : { },\n    \"layer\" : {\n      \"dense\" : {\n        \"activationFn\" : {\n          \"ReLU\" : { }\n        },\n        \"biasInit\" : 0.0,\n        \"biasUpdater\" : null,\n        \"constraints\" : null,\n        \"dist\" : null,\n        \"gradientNormalization\" : \"None\",\n        \"gradientNormalizationThreshold\" : 1.0,\n        \"hasBias\" : true,\n        \"idropout\" : null,\n        \"iupdater\" : {\n          \"@class\" : \"org.nd4j.linalg.learning.config.Nesterovs\",\n          \"learningRate\" : 0.006,\n          \"momentum\" : 0.9\n        },\n        \"l1\" : ...model: org.deeplearning4j.nn.multilayer.MultiLayerNetwork = org.deeplearning4j.nn.multilayer.MultiLayerNetwork@6fada401\nTotal parameter count 100602\nmodelId: String = ca1550c8-b130-487b-b145-5a8474792505\n"}]},"apps":[],"jobName":"paragraph_1521740279210_-505801266","id":"20180322-173759_76310064","dateCreated":"2018-03-22T17:37:59+0000","dateStarted":"2018-03-23T19:30:14+0000","dateFinished":"2018-03-23T19:30:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:261"},{"user":"admin","dateUpdated":"2018-03-22T17:49:24+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521740279210_-505801266","id":"20180322-173759_1073474727","dateCreated":"2018-03-22T17:37:59+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:262"}],"name":"skil_create_mlp_100k","id":"2DAM86PWS","angularObjects":{"2D9UQWXTN:existing_process":[],"2DAHZSNV2:existing_process":[],"2DAMQ8VKX:existing_process":[],"2DC13E4S2:existing_process":[],"2DCA3ZGND:existing_process":[],"2DB4CHG4R:existing_process":[],"2DAKX7JKC:existing_process":[],"2DAZ7H3EG:existing_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}